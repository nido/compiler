
#
#
#  Copyright (C) 2000, 2001 Silicon Graphics, Inc. All Rights Reserved.
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of version 2 of the GNU General Public License as
#  published by the Free Software Foundation.
#
#  This program is distributed in the hope that it would be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#
#  Further, this software is distributed without any warranty that it is
#  free of the rightful claim of any third person regarding infringement 
#  or the like.  Any license provided herein, whether implied or 
#  otherwise, applies only to this software file.  Patent licenses, if 
#  any, provided herein do not apply to combinations of this program with 
#  other software, or any other product whatsoever.  
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write the Free Software Foundation, Inc., 59
#  Temple Place - Suite 330, Boston MA 02111-1307, USA.
#
#  Contact information:  Silicon Graphics, Inc., 1600 Amphitheatre Pky,
#  Mountain View, CA 94043, or:
#
#  http://www.sgi.com
#
#  For further information regarding this notice, see:
#
#  http://oss.sgi.com/projects/GenInfo/NoticeExplan
#
#

#
# This file has been modified and adapted by STMicroelectronics
#

#
# Makefile for libair
#

LIBRARY = libair.a
TARGET  = $(LIBRARY)
SRC_DIRS= $(BUILD_BASE) $(COMMON_COM_DIR) $(COMMON_UTIL_DIR)

#----------------------------------------------------------------------
#  Include the usual commondefs
#----------------------------------------------------------------------

include	$(COMMONDEFS)

# stuff to be removed by clobber

LDIRT  = $(TARGET) a.out *.o *.[ch]


VPATH    =  $(SRC_DIRS)


OBJS     = air.o          \
           air_hash.o     \
           air_disasm.o   \
           air_services.o \
	   air_utils.o    \
	   air_loader.o   \
           dso.o          \
	   memory.o       \
	   dyn_isa_api_access.o  \
           dll_loader.o   \
           isa_loader.o

ifeq ($(BUILD_TARGET),STxP70)
OBJS    += air_stxp70.o
endif

HFILES   = air.h          \
           air_hash.h     \
           air_disasm.h   \
           air_services.h \
           air_loader.h   \
           targ_air.h     \
           dll_loader.h   \
           isa_loader.h   \
           isa_loader_api.h

#----------------------------------------------------------------------
#  List of directories, and source files of interest
#----------------------------------------------------------------------
COMMON_UTIL_DIR = $(BUILD_TOT)/common/util
COMMON_COM_DIR  = $(BUILD_TOT)/common/com
TARG_INFO_DIR   = $(BUILD_AREA)/targ_info

TARGINFO_DIR              = $(BUILD_TOT)/targinfo
TARGINFO_ACCESS_DIR       = $(TARGINFO_DIR)/access
TARGINFO_GENERATE_DIR 	  = $(TARGINFO_DIR)/generate
TARGINFO_GENERATE_DYN_DIR = $(TARGINFO_GENERATE_DIR)/dyn 
TARGINFO_PARSER_INC_DIR	  = $(TARGINFO_DIR)/parser/inc
LIBAIR_DIR                = $(BUILD_TOT)/libair/air

LCINCS += -I$(TARG_INFO_DIR) -I$(COMMON_COM_DIR) -I$(COMMON_UTIL_DIR)
LCINCS += -I$(TARGINFO_GENERATE_DYN_DIR) -I$(TARGINFO_ACCESS_DIR)
LCINCS += -I$(TARGINFO_PARSER_INC_DIR) -I$(LIBAIR_DIR)

# find better than this ?
LCINCS += -I$(BUILD_AREA)/gccfe

ifeq ($(BUILD_TARGET),STxP70)
LCINCS += -I$(TARGINFO_DIR)/stxp70/config
endif

ifeq ($(BUILD_TARGET),ST200)
LCINCS += -I$(TARGINFO_DIR)/st200/config
endif

LCXXINCS = $(LCINCS)

ifeq (MINGW,$(HOST_OS))
CFLAGS += -DBE_EXPORTED= -DTARGINFO_EXPORTED= -DCG_EXPORTED=
endif

CXXFLAGS += -DBE_EXPORTED= -DTARGINFO_EXPORTED= -DCG_EXPORTED= -DBACK_END -DMONGOOSE_BE -DBINUTILS

install: last
default: local
local: all

all: $(TARGET) install_files

$(BUILD_TOT)/libair/air/air_loader.cxx: $(BUILD_AREA)/gccfe/extension_include.h

$(COMMON_COM_DIR)/dll_loader.cxx: $(BUILD_AREA)/gccfe/extension_include.h

$(COMMON_COM_DIR)/isa_loader.cxx: $(BUILD_AREA)/gccfe/extension_include.h

$(BUILD_AREA)/gccfe/extension_include.h: $(BUILD_TOT)/gccfe/extension_include.hin
	cd $(BUILD_AREA)/gccfe/ ; $(MAKE) extension_include.h

$(TARGET): $(OBJS)
	-$(RM) $(TARGET)
	$(AR) $(ARFLAGS) $(TARGET) $(OBJS)

.PHONY:install_files
install_files:
	-$(RM) $(BUILD_AREA)/libair/defs_exported.h
	$(INSTALL) $(COMMON_COM_DIR)/defs_exported.h $(BUILD_AREA)/libair

last: local
	$(MAKE) make_deps

include $(COMMONRULES)
