/* -- This file is automatically generated -- */ 
/* 

  Copyright (C) 2001 ST Microelectronics, Inc.  All Rights Reserved. 

  This program is free software; you can redistribute it and/or modify it 
  under the terms of version 2 of the GNU General Public License as 
  published by the Free Software Foundation. 
  This program is distributed in the hope that it would be useful, but 
  WITHOUT ANY WARRANTY; without even the implied warranty of 
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 

  Further, this software is distributed without any warranty that it is 
  free of the rightful claim of any third person regarding infringement 
  or the like.  Any license provided herein, whether implied or 
  otherwise, applies only to this software file.  Patent licenses, if 
  any, provided herein do not apply to combinations of this program with 
  other software, or any other product whatsoever. 
  You should have received a copy of the GNU General Public License along 
  with this program; if not, write the Free Software Foundation, Inc., 59 
  Temple Place - Suite 330, Boston MA 02111-1307, USA. 

  Contact information:  ST Microelectronics, Inc., 
  , or: 

  http://www.st.com 

  For further information regarding this notice, see: 

  http: 
*/ 

// 
// Group TOPs with similar packing format together.  
///////////////////////////////////////////////////////// 
// The instructions are listed by category. The different categories of 
// instructions are: 
// 
//   1. ALU 
//   2. Integer 
//   3. Memory 
//   4. Branch 
//   5. Float 
// 
// Within each Pack_Type instructions are listed in the order as shown 
// in the IA-64 instructions formats manual 
///////////////////////////////////// 

// Instructions may be packed (compressed) in binary files. The packing rules 
// are specified in this file. 

#include <stddef.h> 
#include "topcode.h" 
#include "isa_pack_gen.h" 

main() 
{ 
  ISA_PACK_TYPE 
		p0, 	// *
		p1, 	// *
		p2, 	// *
		p3, 	// *
		p4, 	// *
		p5, 	// *
		p6, 	// *
		p7, 	// *
		p8, 	// *
		p9, 	// *
		p10, 	// *
		p11, 	// *
		p12, 	// *
		p13, 	// *
		p14, 	// *
		p15, 	// GP32_LINK_GT
		p16, 	// *
		p17, 	// *
		p18, 	// *
		p19, 	// *
		p20, 	// *
		p21, 	// *
		p22, 	// *
		p23, 	// *
		p24, 	// *
		p25, 	// *
		p26, 	// *
		p27, 	// *
		p28, 	// *
		p29, 	// *
		p30, 	// *
		p31, 	// *
		p32, 	// *
		p33, 	// *
		p34, 	// pregtn
		p35, 	// *
		p36, 	// *
		p37, 	// spadjust
		p38, 	// *
		p39, 	// *
		p40, 	// *
		p41, 	// *
		p42, 	// *
		p43, 	// *
		p44, 	// *
		p45, 	// label
		p46, 	// *
		p47, 	// *
		p48, 	// *
		p49, 	// *
		p50, 	// *
		p51, 	// fixup
		p52, 	// *
		p53, 	// *
		p54, 	// *
		p55, 	// *
		p56, 	// *
		p57, 	// *
		p58, 	// *
		p59, 	// *
		p60, 	// *
		p61, 	// *
		p62, 	// *
		p63, 	// *
		p64, 	// *
		p65, 	// *
		p66, 	// *
		p67, 	// *
		p68, 	// *
		p69, 	// *
		p70, 	// *
		p71, 	// *
		p72, 	// *
		p73, 	// *
		p74, 	// *
		p75, 	// *
		p76, 	// *
		p77, 	// *
		p78, 	// *
		p79, 	// *
		p80, 	// *
		p81, 	// *
		p82, 	// *
		p83, 	// *
		p84, 	// *
		p85, 	// *
		p86, 	// *
		p87, 	// *
		p88, 	// *
		p89, 	// *
		p90, 	// *
		p91, 	// *
		p92, 	// *
		p93, 	// *
		p94, 	// fixup
		p95, 	// intrncall
		p96, 	// *
		p97, 	// *
		p98, 	// *
		p99, 	// *
		p100, 	// *
		p101, 	// *
		p102, 	// *
		p103, 	// *
		p104, 	// *
		p105, 	// *
		p106, 	// *
		p107, 	// *
		p108, 	// *
		p109, 	// *
		p110, 	// *
		p111, 	// *
		p112, 	// *
		p113, 	// *
		p114, 	// *
		p115, 	// *
		p116, 	// *
		p117, 	// *
		p118, 	// *
		p119, 	// noop
		p120, 	// *
		p121, 	// *
		p122, 	// *
		p123, 	// *
		p124, 	// *
		p125, 	// *
		p126, 	// *
		p127, 	// *
		p128, 	// *
		p129, 	// *
		p130, 	// *
		p131, 	// *
		p132, 	// *
		p133, 	// *
		p134, 	// *
		p135, 	// *
		p136, 	// *
		p137, 	// *
		p138, 	// *
		p139, 	// *
		p140, 	// *
		p141, 	// *
		p142, 	// *
		p143, 	// *
		p144, 	// *
		p145, 	// *
		p146, 	// *
		p147, 	// *
		p148, 	// *
		p149, 	// *
		p150, 	// *
		p151, 	// *
		p152, 	// *
		p153, 	// *
		p154, 	// *
		p155, 	// *
		p156, 	// *
		p157, 	// *
		p158, 	// *
		p159, 	// *
		p160, 	// *
		p161, 	// *
		p162, 	// *
		p163, 	// *
		p164, 	// *
		p165, 	// *
		p166, 	// *
		p167, 	// *
		p168, 	// *
		p169, 	// *
		p170, 	// *
		p171, 	// *
		p172, 	// *
		p173, 	// *
		p174, 	// *
		p175, 	// *
		p176, 	// *
		p177, 	// *
		p178, 	// *
		p179, 	// *
		p180, 	// *
		p181, 	// *
		p182, 	// *
		p183, 	// *
		p184, 	// *
		p185, 	// *
		p186, 	// *
		p187, 	// *
		p188, 	// *
		p189, 	// *
		p190, 	// *
		p191, 	// *
		p192, 	// *
		p193, 	// *
		p194, 	// *
		p195, 	// *
		p196, 	// *
		p197, 	// *
		p198, 	// *
		p199, 	// *
		p200, 	// *
		p201, 	// *
		p202, 	// *
		p203, 	// *
		p204, 	// asm
		p205, 	// *
		p206, 	// *
		p207, 	// *
		p208, 	// *
		p209, 	// *
		p210, 	// *
		p211, 	// *
		p212, 	// *
		p213, 	// *
		p214, 	// *
		p215, 	// *
		p216, 	// *
		p217, 	// *
		p218, 	// *
		p219, 	// *
		p220, 	// *
		p221, 	// *
		p222, 	// *
		p223, 	// *
		p224, 	// *
		p225, 	// *
		p226, 	// *
		p227, 	// *
		p228, 	// *
		p229, 	// *
		p230, 	// *
		p231, 	// *
		p232, 	// *
		p233, 	// *
		p234, 	// *
		p235, 	// *
		p236, 	// *
		p237, 	// *
		p238, 	// *
		p239, 	// *
		p240, 	// *
		p241, 	// *
		p242, 	// *
		p243, 	// *
		p244, 	// *
		p245, 	// *
		p246, 	// *
		p247, 	// *
		p248, 	// *
		p249, 	// *
		p250, 	// *
		p251, 	// *
		p252, 	// *
		p253, 	// *
		p254, 	// *
		p255, 	// *
		p256, 	// *
		p257, 	// *
		p258, 	// *
		p259, 	// *
		p260, 	// *
		p261, 	// copy_br
		p262, 	// *
		p263, 	// *
		p264, 	// *
		p265, 	// GP32_CALL_S25
		p266, 	// *
		p267, 	// *
		p268, 	// *
		p269, 	// *
		p270, 	// *
		p271, 	// *
		p272, 	// *
		p273, 	// *
		p274, 	// *
		p275, 	// *
		p276, 	// *
		p277, 	// *
		p278, 	// *
		p279, 	// *
		p280, 	// *
		p281, 	// *
		p282; 	// *

  OPND_ADJ_TYPE	no_adj; 

  ISA_Pack_Begin("st100", 32); 

  /* Create the various adjustments that need to be performed between 
   * assembly language form and packed form. Note that simple shift  
   * adjustments have been accomplished directly in the operand packing 
   * specification. 
   */ 

  no_adj = Create_Operand_Adjustment("no adjustment", "O_VAL"); 

/* =====  p0: ===== */ 
  p0 = ISA_Pack_Type_Create("p0"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p0, 
	TOP_GP32_SDBP_GT_MD_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_MD_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_MD_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_MD_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_MD_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_MD_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_MD_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_MD_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_MD_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_MD_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_MD_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_MD_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_MD_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_MD_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_MD_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_MD_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_MD_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_MD_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_MD_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_MD_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_MD_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_MD_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_MD_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_MD_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_MD_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_MD_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_MD_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_MD_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_MD_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_MD_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_MD_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_MD_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_MD_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_MD_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_MD_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_MD_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p1: ===== */ 
  p1 = ISA_Pack_Type_Create("p1"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 7, 5); 
  Operand (4, 0, 12, 5); 
  Instruction_Pack_Group(p1, 
	TOP_GP32_LCW_GT_MD_CRH_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRH_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p2: ===== */ 
  p2 = ISA_Pack_Type_Create("p2"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p2, 
	TOP_GP32_SCW_GT_AR_BM_AR_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_BP_AR_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_QM_AR_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_QP_AR_CRH, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p3: ===== */ 
  p3 = ISA_Pack_Type_Create("p3"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p3, 
	TOP_GP32_CALLPR_GT_U16, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p4: ===== */ 
  p4 = ISA_Pack_Type_Create("p4"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p4, 
	TOP_GP32_LDH_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p5: ===== */ 
  p5 = ISA_Pack_Type_Create("p5"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p5, 
	TOP_GP16_SDB_G0T_MQ_P15_DRL, 	 0x10000000UL, 
	TOP_GP16_SDB_G0T_P15_QP_DRL, 	 0x10000000UL, 
	TOP_GP16_SDH_G0T_MQ_P15_DRL, 	 0x10000000UL, 
	TOP_GP16_SDH_G0T_P15_QP_DRL, 	 0x10000000UL, 
	TOP_GP16_SDW_G0T_MQ_P15_DRL, 	 0x10000000UL, 
	TOP_GP16_SDW_G0T_P15_QP_DRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p6: ===== */ 
  p6 = ISA_Pack_Type_Create("p6"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 11, 5); 
  Instruction_Pack_Group(p6, 
	TOP_GP32_SDBP_GT_MD_AR_M_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_MD_AR_P_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_MD_AR_M_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_MD_AR_P_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_MD_AR_M_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_MD_AR_P_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_MD_AR_M_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_MD_AR_P_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_MD_AR_M_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_MD_AR_P_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_MD_AR_M_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_MD_AR_P_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_MD_AR_M_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_MD_AR_P_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_MD_AR_M_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_MD_AR_P_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_MD_AR_M_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_MD_AR_P_U5_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p7: ===== */ 
  p7 = ISA_Pack_Type_Create("p7"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p7, 
	TOP_GP32_SCW_GT_AR_BM_AR_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_BP_AR_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_QM_AR_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_QP_AR_CRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p8: ===== */ 
  p8 = ISA_Pack_Type_Create("p8"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p8, 
	TOP_GP32_LDBP_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p9: ===== */ 
  p9 = ISA_Pack_Type_Create("p9"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p9, 
	TOP_GP16_LINK_G0T, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p10: ===== */ 
  p10 = ISA_Pack_Type_Create("p10"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p10, 
	TOP_GP32_SCW_GT_AR_M_AR_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_P_AR_CRH, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p11: ===== */ 
  p11 = ISA_Pack_Type_Create("p11"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p11, 
	TOP_GP32_SCW_GT_AR_M_AR_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_P_AR_CRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p12: ===== */ 
  p12 = ISA_Pack_Type_Create("p12"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p12, 
	TOP_GP32_ADDBA_GT_AR_AR_U9, 	 0x10000000UL, 
	TOP_GP32_SUBBA_GT_AR_AR_U9, 	 0x10000000UL, 
	TOP_GP32_SUBHA_GT_AR_AR_U9, 	 0x10000000UL, 
	TOP_GP32_SUBWA_GT_AR_AR_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p13: ===== */ 
  p13 = ISA_Pack_Type_Create("p13"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p13, 
	TOP_GP32_LDEW_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p14: ===== */ 
  p14 = ISA_Pack_Type_Create("p14"); 
  Operand (0, 0, 0, 1); 
  Instruction_Pack_Group(p14, 
	TOP_GP32_BKP_GF, 	 0x10000000UL, 
	TOP_GP32_BKP_GT, 	 0x10000000UL, 
	TOP_GP32_RTS_GT, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p15: ===== */ 
  p15 = ISA_Pack_Type_Create("p15"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (1, 0, 6, 5); 
  Instruction_Pack_Group(p15, 
	TOP_GP32_LINK_GT, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p16: ===== */ 
  p16 = ISA_Pack_Type_Create("p16"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p16, 
	TOP_GP32_ADDBA_GT_AR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_ADDHA_GT_AR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_ADDWA_GT_AR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SUBBA_GT_AR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SUBHA_GT_AR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SUBWA_GT_AR_AR_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p17: ===== */ 
  p17 = ISA_Pack_Type_Create("p17"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Instruction_Pack_Group(p17, 
	TOP_GP16_FA_G0_ARL, 	 0x10000000UL, 
	TOP_GP16_TA_G0_ARL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p18: ===== */ 
  p18 = ISA_Pack_Type_Create("p18"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p18, 
	TOP_GP32_LDBP_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p19: ===== */ 
  p19 = ISA_Pack_Type_Create("p19"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p19, 
	TOP_GP16_SAW_G0T_ARL_P_U4_ARL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p20: ===== */ 
  p20 = ISA_Pack_Type_Create("p20"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p20, 
	TOP_GP32_FBPOSP_GT_BR_DR_U4, 	 0x10000000UL, 
	TOP_GP32_TBPOSP_GT_BR_DR_U4, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p21: ===== */ 
  p21 = ISA_Pack_Type_Create("p21"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p21, 
	TOP_GP32_FBPOS_GT_BR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_TBPOS_GT_BR_DR_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p22: ===== */ 
  p22 = ISA_Pack_Type_Create("p22"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p22, 
	TOP_GP16_MOVE_G0T_DRH_DRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p23: ===== */ 
  p23 = ISA_Pack_Type_Create("p23"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p23, 
	TOP_GP32_EQE_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_EQP_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_EQUE_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_EQUP_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_EQUW_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_EQW_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FEANDN_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FEAND_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FEORN_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FEOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FEXNOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FEXOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FPANDN_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FPAND_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FPORN_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FPOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FPXNOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FPXOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FWANDN_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FWAND_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FWORN_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FWOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FWXNOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_FWXOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_GEE_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_GEP_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_GEUE_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_GEUP_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_GEUW_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_GEW_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_GTE_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_GTP_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_GTUE_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_GTUP_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_GTUW_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_GTW_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_LEE_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_LEP_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_LEUE_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_LEUP_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_LEUW_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_LEW_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_LTE_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_LTP_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_LTUE_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_LTUP_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_LTUW_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_LTW_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_NEE_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_NEP_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_NEUE_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_NEUP_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_NEUW_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_NEW_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TEANDN_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TEAND_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TEORN_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TEOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TEXNOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TEXOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TPANDN_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TPAND_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TPORN_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TPOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TPXNOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TPXOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TWANDN_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TWAND_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TWORN_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TWOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TWXNOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_TWXOR_GT_BR_DR_U8, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p24: ===== */ 
  p24 = ISA_Pack_Type_Create("p24"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p24, 
	TOP_GP32_COPYD_GT_DR_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p25: ===== */ 
  p25 = ISA_Pack_Type_Create("p25"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p25, 
	TOP_GP32_LFR_GT_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p26: ===== */ 
  p26 = ISA_Pack_Type_Create("p26"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p26, 
	TOP_GP32_SCW_GT_MD_AR_BM_U5_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_BP_U5_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_QM_U5_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_QP_U5_CRH, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p27: ===== */ 
  p27 = ISA_Pack_Type_Create("p27"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p27, 
	TOP_GP32_SCW_GT_MD_AR_BM_U5_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_BP_U5_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_QM_U5_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_QP_U5_CRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p28: ===== */ 
  p28 = ISA_Pack_Type_Create("p28"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 11, 5); 
  Instruction_Pack_Group(p28, 
	TOP_GP32_SCW_GT_MD_AR_M_U5_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_P_U5_CRH, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p29: ===== */ 
  p29 = ISA_Pack_Type_Create("p29"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 11, 5); 
  Instruction_Pack_Group(p29, 
	TOP_GP32_SDBP_GT_MD_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_MD_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_MD_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_MD_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_MD_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_MD_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_MD_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_MD_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_MD_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_MD_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_MD_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_MD_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_MD_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_MD_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_MD_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_MD_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_MD_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_MD_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p30: ===== */ 
  p30 = ISA_Pack_Type_Create("p30"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Instruction_Pack_Group(p30, 
	TOP_GP16_MAKEPR_S11, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p31: ===== */ 
  p31 = ISA_Pack_Type_Create("p31"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 11, 5); 
  Instruction_Pack_Group(p31, 
	TOP_GP32_SCW_GT_MD_AR_M_U5_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_P_U5_CRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p32: ===== */ 
  p32 = ISA_Pack_Type_Create("p32"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p32, 
	TOP_GP32_SAH_GT_AR_M_U9_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_AR_P_U9_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_M_U9_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_P_U9_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p33: ===== */ 
  p33 = ISA_Pack_Type_Create("p33"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p33, 
	TOP_GP32_LGR_GT_MD_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_MD_AR_P_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p34: ===== */ 
  p34 = ISA_Pack_Type_Create("p34"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p34, 
	TOP_GP16_LDB_G0T_DRL_P15_P_U6, 	 0x10000000UL, 
	TOP_GP16_LDH_G0T_DRL_P15_P_U6, 	 0x10000000UL, 
	TOP_GP16_LDUB_G0T_DRL_P15_P_U6, 	 0x10000000UL, 
	TOP_GP16_LDUH_G0T_DRL_P15_P_U6, 	 0x10000000UL, 
	TOP_GP16_LDUW_G0T_DRL_P15_P_U6, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p35: ===== */ 
  p35 = ISA_Pack_Type_Create("p35"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p35, 
	TOP_GP16_LDB_G0T_DRL_P13_P_U8, 	 0x10000000UL, 
	TOP_GP16_LDH_G0T_DRL_P13_P_U8, 	 0x10000000UL, 
	TOP_GP16_LDUB_G0T_DRL_P13_P_U8, 	 0x10000000UL, 
	TOP_GP16_LDUH_G0T_DRL_P13_P_U8, 	 0x10000000UL, 
	TOP_GP16_LDUW_G0T_DRL_P13_P_U8, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p36: ===== */ 
  p36 = ISA_Pack_Type_Create("p36"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p36, 
	TOP_GP32_LCW_GT_CRH_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRH_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRH_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRH_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRH_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p37: ===== */ 
  p37 = ISA_Pack_Type_Create("p37"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p37, 
	TOP_GP16_AND_G0T_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_DECU_G0T_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_INCU_G0T_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_SHLU_G0T_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_SHRUW_G0T_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_SHRW_G0T_DRL_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p38: ===== */ 
  p38 = ISA_Pack_Type_Create("p38"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p38, 
	TOP_GP32_LFR_GT_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_AR_P_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p39: ===== */ 
  p39 = ISA_Pack_Type_Create("p39"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p39, 
	TOP_GP16_ADDBA_G0T_ARL_ARH_P3, 	 0x10000000UL, 
	TOP_GP16_ADDHA_G0T_ARL_ARH_P3, 	 0x10000000UL, 
	TOP_GP16_ADDWA_G0T_ARL_ARH_P3, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p40: ===== */ 
  p40 = ISA_Pack_Type_Create("p40"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Instruction_Pack_Group(p40, 
	TOP_GP16_LDB_G0T_DRL_MQ_P15, 	 0x10000000UL, 
	TOP_GP16_LDB_G0T_DRL_P15_QP, 	 0x10000000UL, 
	TOP_GP16_LDH_G0T_DRL_MQ_P15, 	 0x10000000UL, 
	TOP_GP16_LDH_G0T_DRL_P15_QP, 	 0x10000000UL, 
	TOP_GP16_LDUB_G0T_DRL_MQ_P15, 	 0x10000000UL, 
	TOP_GP16_LDUB_G0T_DRL_P15_QP, 	 0x10000000UL, 
	TOP_GP16_LDUH_G0T_DRL_MQ_P15, 	 0x10000000UL, 
	TOP_GP16_LDUH_G0T_DRL_P15_QP, 	 0x10000000UL, 
	TOP_GP16_LDUW_G0T_DRL_MQ_P15, 	 0x10000000UL, 
	TOP_GP16_LDUW_G0T_DRL_P15_QP, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p41: ===== */ 
  p41 = ISA_Pack_Type_Create("p41"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p41, 
	TOP_GP16_CALLPR_G0T_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p42: ===== */ 
  p42 = ISA_Pack_Type_Create("p42"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p42, 
	TOP_GP16_ADDBA_G0T_ARL_ARL_P3, 	 0x10000000UL, 
	TOP_GP16_ADDHA_G0T_ARL_ARL_P3, 	 0x10000000UL, 
	TOP_GP16_ADDWA_G0T_ARL_ARL_P3, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p43: ===== */ 
  p43 = ISA_Pack_Type_Create("p43"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 7, 5); 
  Operand (4, 0, 12, 5); 
  Instruction_Pack_Group(p43, 
	TOP_GP32_LCW_GT_MD_CRH_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRH_AR_P_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p44: ===== */ 
  p44 = ISA_Pack_Type_Create("p44"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p44, 
	TOP_GP32_SDBP_GT_MD_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_MD_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_MD_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_MD_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_MD_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_MD_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_MD_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_MD_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_MD_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_MD_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_MD_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_MD_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_MD_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_MD_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_MD_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_MD_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_MD_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_MD_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_MD_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_MD_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_MD_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_MD_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_MD_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_MD_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_MD_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_MD_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_MD_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_MD_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_MD_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_MD_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_MD_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_MD_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_MD_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_MD_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_MD_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_MD_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p45: ===== */ 
  p45 = ISA_Pack_Type_Create("p45"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p45, 
	TOP_GP32_ADDBA_GT_AR_P13_U15, 	 0x10000000UL, 
	TOP_GP32_ADDHA_GT_AR_P13_U15, 	 0x10000000UL, 
	TOP_GP32_ADDWA_GT_AR_P13_U15, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p46: ===== */ 
  p46 = ISA_Pack_Type_Create("p46"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p46, 
	TOP_GP32_MAKEPR_GT_S21, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p47: ===== */ 
  p47 = ISA_Pack_Type_Create("p47"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Instruction_Pack_Group(p47, 
	TOP_GP16_BRANCH, 	 0x10000000UL, 
	TOP_GP16_JUMP, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p48: ===== */ 
  p48 = ISA_Pack_Type_Create("p48"); 
  Instruction_Pack_Group(p48, 
	TOP_GP16_BARRIER, 	 0x10000000UL, 
	TOP_GP16_BKP, 	 0x10000000UL, 
	TOP_GP16_GP32MD, 	 0x10000000UL, 
	TOP_GP16_GP32NXT, 	 0x10000000UL, 
	TOP_GP16_NOP, 	 0x10000000UL, 
	TOP_GP16_RTS, 	 0x10000000UL, 
	TOP_GP32_BARRIER, 	 0x10000000UL, 
	TOP_GP32_GP16MD, 	 0x10000000UL, 
	TOP_GP32_GP32MD, 	 0x10000000UL, 
	TOP_GP32_LOOPDIS, 	 0x10000000UL, 
	TOP_GP32_LOOPENA, 	 0x10000000UL, 
	TOP_GP32_NOP, 	 0x10000000UL, 
	TOP_GP32_RTE, 	 0x10000000UL, 
	TOP_GP32_SLIWMD, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p49: ===== */ 
  p49 = ISA_Pack_Type_Create("p49"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Instruction_Pack_Group(p49, 
	TOP_GP32_BFPSR0_GT_U8_U8, 	 0x10000000UL, 
	TOP_GP32_BFPSR1_GT_U8_U8, 	 0x10000000UL, 
	TOP_GP32_BFPSR2_GT_U8_U8, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p50: ===== */ 
  p50 = ISA_Pack_Type_Create("p50"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p50, 
	TOP_GP32_SDBP_GT_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_AR_MQ_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_MQ_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_MQ_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_MQ_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_MQ_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_MQ_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_MQ_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_MQ_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_BM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_BP_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_MQ_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_QM_U5_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_QP_U5_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p51: ===== */ 
  p51 = ISA_Pack_Type_Create("p51"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p51, 
	TOP_GP32_EQESUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQPSUBC_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQPSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQUESUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQUPSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQUWSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQWSUBC_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQWSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FBCLRP_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FBCLR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FBNOTP_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FBNOT_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FBSETP_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FBSET_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEMANDN_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEMAND_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEMNAND_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEMNOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEMORN_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEMOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEMXNOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEMXOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPMANDN_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPMAND_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPMNAND_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPMNOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPMORN_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPMOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPMXNOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPMXOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWMANDN_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWMAND_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWMNAND_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWMNOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWMORN_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWMOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWMXNOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWMXOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEESUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEPSUBC_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEPSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEUESUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEUPSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEUWSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEWSUBC_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEWSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTESUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTPSUBC_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTPSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTUESUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTUPSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTUWSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTWSUBC_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTWSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEESUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEPSUBC_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEPSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEUESUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEUPSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEUWSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEWSUBC_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEWSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTESUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTPSUBC_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTPSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTUESUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTUPSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTUWSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTWSUBC_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTWSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEESUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEPSUBC_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEPSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEUESUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEUPSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEUWSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEWSUBC_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEWSUB_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TBCLRP_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TBCLR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TBNOTP_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TBNOT_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TBSETP_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TBSET_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEMANDN_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEMAND_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEMNAND_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEMNOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEMORN_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEMOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEMXNOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEMXOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPMANDN_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPMAND_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPMNAND_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPMNOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPMORN_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPMOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPMXNOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPMXOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWMANDN_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWMAND_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWMNAND_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWMNOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWMORN_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWMOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWMXNOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWMXOR_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p52: ===== */ 
  p52 = ISA_Pack_Type_Create("p52"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 11, 5); 
  Instruction_Pack_Group(p52, 
	TOP_GP32_SCW_GT_MD_AR_M_AR_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_P_AR_CRH, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p53: ===== */ 
  p53 = ISA_Pack_Type_Create("p53"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p53, 
	TOP_GP32_LFR_GT_P13_P_U15, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p54: ===== */ 
  p54 = ISA_Pack_Type_Create("p54"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 7, 5); 
  Instruction_Pack_Group(p54, 
	TOP_GP32_ADDBA_GT_MD_AR_AR_U5, 	 0x10000000UL, 
	TOP_GP32_ADDHA_GT_MD_AR_AR_U5, 	 0x10000000UL, 
	TOP_GP32_ADDWA_GT_MD_AR_AR_U5, 	 0x10000000UL, 
	TOP_GP32_SUBBA_GT_MD_AR_AR_U5, 	 0x10000000UL, 
	TOP_GP32_SUBHA_GT_MD_AR_AR_U5, 	 0x10000000UL, 
	TOP_GP32_SUBWA_GT_MD_AR_AR_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p55: ===== */ 
  p55 = ISA_Pack_Type_Create("p55"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 11, 5); 
  Instruction_Pack_Group(p55, 
	TOP_GP32_SCW_GT_MD_AR_M_AR_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_P_AR_CRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p56: ===== */ 
  p56 = ISA_Pack_Type_Create("p56"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p56, 
	TOP_GP32_LDW_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p57: ===== */ 
  p57 = ISA_Pack_Type_Create("p57"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p57, 
	TOP_GP32_COPYC_GT_CRL_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p58: ===== */ 
  p58 = ISA_Pack_Type_Create("p58"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 7, 5); 
  Operand (4, 0, 12, 5); 
  Instruction_Pack_Group(p58, 
	TOP_GP32_LDEW_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p59: ===== */ 
  p59 = ISA_Pack_Type_Create("p59"); 
  Result(0, 0, 5); 
  Instruction_Pack_Group(p59, 
	TOP_GP16_SETG_G0, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p60: ===== */ 
  p60 = ISA_Pack_Type_Create("p60"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p60, 
	TOP_GP32_SFR_GT_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p61: ===== */ 
  p61 = ISA_Pack_Type_Create("p61"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p61, 
	TOP_GP32_SGR_GT_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p62: ===== */ 
  p62 = ISA_Pack_Type_Create("p62"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p62, 
	TOP_GP32_MAKEC_GT_CRL_U16, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p63: ===== */ 
  p63 = ISA_Pack_Type_Create("p63"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p63, 
	TOP_GP32_LAH_GT_AR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_AR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p64: ===== */ 
  p64 = ISA_Pack_Type_Create("p64"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p64, 
	TOP_GP16_MOVEA_G0T_ARH_ARL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p65: ===== */ 
  p65 = ISA_Pack_Type_Create("p65"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p65, 
	TOP_GP32_LCW_GT_CRH_P13_P_U15, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p66: ===== */ 
  p66 = ISA_Pack_Type_Create("p66"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Instruction_Pack_Group(p66, 
	TOP_GP32_CLRFR_GT, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p67: ===== */ 
  p67 = ISA_Pack_Type_Create("p67"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p67, 
	TOP_GP32_SAH_GT_P13_P_U15_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_P13_P_U15_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p68: ===== */ 
  p68 = ISA_Pack_Type_Create("p68"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p68, 
	TOP_GP32_SCW_GT_MD_AR_BM_AR_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_BP_AR_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_QM_AR_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_QP_AR_CRH, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p69: ===== */ 
  p69 = ISA_Pack_Type_Create("p69"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p69, 
	TOP_GP32_EQA_GT_BR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_GEA_GT_BR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_GTA_GT_BR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_LEA_GT_BR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_LTA_GT_BR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_NEA_GT_BR_AR_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p70: ===== */ 
  p70 = ISA_Pack_Type_Create("p70"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p70, 
	TOP_GP32_SFR_GT_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p71: ===== */ 
  p71 = ISA_Pack_Type_Create("p71"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p71, 
	TOP_GP32_LFR_GT_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p72: ===== */ 
  p72 = ISA_Pack_Type_Create("p72"); 
  Operand (0, 0, 0, 5); 
  Instruction_Pack_Group(p72, 
	TOP_GP32_BRANCH, 	 0x10000000UL, 
	TOP_GP32_JUMP, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p73: ===== */ 
  p73 = ISA_Pack_Type_Create("p73"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p73, 
	TOP_GP32_SGR_GT_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p74: ===== */ 
  p74 = ISA_Pack_Type_Create("p74"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p74, 
	TOP_GP32_SCW_GT_MD_AR_BM_AR_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_BP_AR_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_QM_AR_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_MD_AR_QP_AR_CRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p75: ===== */ 
  p75 = ISA_Pack_Type_Create("p75"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (2, 0, 11, 5); 
  Operand (3, 0, 16, 5); 
  Instruction_Pack_Group(p75, 
	TOP_GP16_SDB_G0T_ARL_P_P3_DRL, 	 0x10000000UL, 
	TOP_GP16_SDH_G0T_ARL_P_P3_DRL, 	 0x10000000UL, 
	TOP_GP16_SDW_G0T_ARL_P_P3_DRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p76: ===== */ 
  p76 = ISA_Pack_Type_Create("p76"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p76, 
	TOP_GP16_MAKESR_G0T_S11, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p77: ===== */ 
  p77 = ISA_Pack_Type_Create("p77"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p77, 
	TOP_GP32_LCG_GT_MD_BR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_MD_BR_AR_P_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p78: ===== */ 
  p78 = ISA_Pack_Type_Create("p78"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p78, 
	TOP_GP32_SETP15U_GT_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p79: ===== */ 
  p79 = ISA_Pack_Type_Create("p79"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Operand (1, 0, 6, 5); 
  Instruction_Pack_Group(p79, 
	TOP_GP16_PUSH_RSET, 	 0x10000000UL, 
	TOP_GP32_PUSH_RSET, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p80: ===== */ 
  p80 = ISA_Pack_Type_Create("p80"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p80, 
	TOP_GP32_SCW_GT_AR_BM_U5_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_BP_U5_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_MQ_U5_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_QM_U5_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_QP_U5_CRH, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p81: ===== */ 
  p81 = ISA_Pack_Type_Create("p81"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p81, 
	TOP_GP32_LFR_GT_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p82: ===== */ 
  p82 = ISA_Pack_Type_Create("p82"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p82, 
	TOP_GP32_LCW_GT_MD_CRL_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRL_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRL_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRL_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p83: ===== */ 
  p83 = ISA_Pack_Type_Create("p83"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p83, 
	TOP_GP32_SCW_GT_AR_BM_U5_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_BP_U5_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_MQ_U5_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_QM_U5_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_QP_U5_CRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p84: ===== */ 
  p84 = ISA_Pack_Type_Create("p84"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p84, 
	TOP_GP16_MAKEB_G0T_DR_S32, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p85: ===== */ 
  p85 = ISA_Pack_Type_Create("p85"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Instruction_Pack_Group(p85, 
	TOP_GP32_GOTO_GF_S21, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p86: ===== */ 
  p86 = ISA_Pack_Type_Create("p86"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p86, 
	TOP_GP32_LGR_GT_MD_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_MD_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_MD_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_MD_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p87: ===== */ 
  p87 = ISA_Pack_Type_Create("p87"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p87, 
	TOP_GP32_LAH_GT_AR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_AR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_AR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_AR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p88: ===== */ 
  p88 = ISA_Pack_Type_Create("p88"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Instruction_Pack_Group(p88, 
	TOP_GP32_TRAP_GT_U4, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p89: ===== */ 
  p89 = ISA_Pack_Type_Create("p89"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p89, 
	TOP_GP32_LDEW_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p90: ===== */ 
  p90 = ISA_Pack_Type_Create("p90"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p90, 
	TOP_GP32_LFR_GT_MD_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_MD_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_MD_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_MD_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p91: ===== */ 
  p91 = ISA_Pack_Type_Create("p91"); 
  Operand (0, 0, 0, 5); 
  Operand (1, 0, 5, 5); 
  Instruction_Pack_Group(p91, 
	TOP_GP32_GOTOPR_U16, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p92: ===== */ 
  p92 = ISA_Pack_Type_Create("p92"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p92, 
	TOP_GP16_DECWA_G0T_P15_ARL, 	 0x10000000UL, 
	TOP_GP16_INCWA_G0T_P15_ARL, 	 0x10000000UL, 
	TOP_GP16_SAW_G0T_MQ_P15_ARL, 	 0x10000000UL, 
	TOP_GP16_SAW_G0T_P15_QP_ARL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p93: ===== */ 
  p93 = ISA_Pack_Type_Create("p93"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p93, 
	TOP_GP32_MAKEA_GT_AR_S16, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p94: ===== */ 
  p94 = ISA_Pack_Type_Create("p94"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Instruction_Pack_Group(p94, 
	TOP_GP32_CLRG_GT_BR, 	 0x10000000UL, 
	TOP_GP32_CLRPG_GT_BR, 	 0x10000000UL, 
	TOP_GP32_SETG_GT_BR, 	 0x10000000UL, 
	TOP_GP32_SETPG_GT_BR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p95: ===== */ 
  p95 = ISA_Pack_Type_Create("p95"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p95, 
	TOP_GP32_ADDHA_GT_AR_AR_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p96: ===== */ 
  p96 = ISA_Pack_Type_Create("p96"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p96, 
	TOP_GP32_ADDWA_GT_AR_AR_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p97: ===== */ 
  p97 = ISA_Pack_Type_Create("p97"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p97, 
	TOP_GP16_MAKEK_G0T_DR_S40, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p98: ===== */ 
  p98 = ISA_Pack_Type_Create("p98"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p98, 
	TOP_GP32_MOREA_GT_AR_U16, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p99: ===== */ 
  p99 = ISA_Pack_Type_Create("p99"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p99, 
	TOP_GP32_LCG_GT_MD_BR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_MD_BR_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p100: ===== */ 
  p100 = ISA_Pack_Type_Create("p100"); 
  Operand (0, 0, 0, 5); 
  Instruction_Pack_Group(p100, 
	TOP_GP32_GOTO_S25, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p101: ===== */ 
  p101 = ISA_Pack_Type_Create("p101"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p101, 
	TOP_GP32_LGR_GT_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_AR_P_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p102: ===== */ 
  p102 = ISA_Pack_Type_Create("p102"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p102, 
	TOP_GP32_LCW_GT_CRL_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRL_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p103: ===== */ 
  p103 = ISA_Pack_Type_Create("p103"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p103, 
	TOP_GP32_MAKEC_GT_CRL_P3_U16, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p104: ===== */ 
  p104 = ISA_Pack_Type_Create("p104"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p104, 
	TOP_GP32_LCW_GT_CRH_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRH_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p105: ===== */ 
  p105 = ISA_Pack_Type_Create("p105"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p105, 
	TOP_GP32_LCG_GT_MD_BR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_MD_BR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_MD_BR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_MD_BR_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p106: ===== */ 
  p106 = ISA_Pack_Type_Create("p106"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p106, 
	TOP_GP32_LGR_GT_P13_P_U15, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p107: ===== */ 
  p107 = ISA_Pack_Type_Create("p107"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p107, 
	TOP_GP16_MAKEBA_G0T_AR_U32, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p108: ===== */ 
  p108 = ISA_Pack_Type_Create("p108"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p108, 
	TOP_GP32_FEANDN_GT_BR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_FEORN_GT_BR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_FPANDN_GT_BR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_FPORN_GT_BR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_FWANDN_GT_BR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_FWORN_GT_BR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_TEANDN_GT_BR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_TEORN_GT_BR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_TPANDN_GT_BR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_TPORN_GT_BR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_TWANDN_GT_BR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_TWORN_GT_BR_U8_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p109: ===== */ 
  p109 = ISA_Pack_Type_Create("p109"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p109, 
	TOP_GP32_LCG_GT_BR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_BR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_BR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_BR_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p110: ===== */ 
  p110 = ISA_Pack_Type_Create("p110"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p110, 
	TOP_GP32_LDBP_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p111: ===== */ 
  p111 = ISA_Pack_Type_Create("p111"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 5); 
  Instruction_Pack_Group(p111, 
	TOP_GP16_POPRTS_RSET, 	 0x10000000UL, 
	TOP_GP16_POP_RSET, 	 0x10000000UL, 
	TOP_GP32_POPRTE_RSET, 	 0x10000000UL, 
	TOP_GP32_POPRTS_RSET, 	 0x10000000UL, 
	TOP_GP32_POP_RSET, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p112: ===== */ 
  p112 = ISA_Pack_Type_Create("p112"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p112, 
	TOP_GP32_BOOLP_GT_DR_BR, 	 0x10000000UL, 
	TOP_GP32_BOOL_GT_DR_BR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p113: ===== */ 
  p113 = ISA_Pack_Type_Create("p113"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p113, 
	TOP_GP32_LDBP_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_MD_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_MD_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_MD_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_MD_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p114: ===== */ 
  p114 = ISA_Pack_Type_Create("p114"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p114, 
	TOP_GP32_BITRA_GT_AR_AR, 	 0x10000000UL, 
	TOP_GP32_MOVEA_GT_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SHRA1_GT_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SHRA2_GT_AR_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p115: ===== */ 
  p115 = ISA_Pack_Type_Create("p115"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p115, 
	TOP_GP16_COPYA_G0T_ARL_DRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p116: ===== */ 
  p116 = ISA_Pack_Type_Create("p116"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p116, 
	TOP_GP32_LCG_GT_BR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_BR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_BR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_BR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_BR_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p117: ===== */ 
  p117 = ISA_Pack_Type_Create("p117"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p117, 
	TOP_GP32_MAKEC_GT_CRL_P3, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p118: ===== */ 
  p118 = ISA_Pack_Type_Create("p118"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p118, 
	TOP_GP32_LDEW_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p119: ===== */ 
  p119 = ISA_Pack_Type_Create("p119"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p119, 
	TOP_GP32_LDEW_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p120: ===== */ 
  p120 = ISA_Pack_Type_Create("p120"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p120, 
	TOP_GP32_SFR_GT_MD_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_MD_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_MD_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_MD_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p121: ===== */ 
  p121 = ISA_Pack_Type_Create("p121"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p121, 
	TOP_GP32_SGR_GT_MD_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_MD_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_MD_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_MD_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p122: ===== */ 
  p122 = ISA_Pack_Type_Create("p122"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p122, 
	TOP_GP32_MORE_GT_DR_U16, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p123: ===== */ 
  p123 = ISA_Pack_Type_Create("p123"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p123, 
	TOP_GP32_LDW_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p124: ===== */ 
  p124 = ISA_Pack_Type_Create("p124"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p124, 
	TOP_GP32_LDW_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p125: ===== */ 
  p125 = ISA_Pack_Type_Create("p125"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p125, 
	TOP_GP16_SDB_G0T_P15_P_U6_DRL, 	 0x10000000UL, 
	TOP_GP16_SDH_G0T_P15_P_U6_DRL, 	 0x10000000UL, 
	TOP_GP16_SDW_G0T_P15_P_U6_DRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p126: ===== */ 
  p126 = ISA_Pack_Type_Create("p126"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p126, 
	TOP_GP16_SDB_G0T_P13_P_U8_DRL, 	 0x10000000UL, 
	TOP_GP16_SDH_G0T_P13_P_U8_DRL, 	 0x10000000UL, 
	TOP_GP16_SDW_G0T_P13_P_U8_DRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p127: ===== */ 
  p127 = ISA_Pack_Type_Create("p127"); 
  Operand (0, 0, 0, 1); 
  Instruction_Pack_Group(p127, 
	TOP_GP16_BKPNXT_G0T, 	 0x10000000UL, 
	TOP_GP16_BKP_G0F, 	 0x10000000UL, 
	TOP_GP16_BKP_G0T, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p128: ===== */ 
  p128 = ISA_Pack_Type_Create("p128"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p128, 
	TOP_GP32_LGR_GT_MD_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_MD_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p129: ===== */ 
  p129 = ISA_Pack_Type_Create("p129"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p129, 
	TOP_GP32_SFR_GT_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_AR_P_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p130: ===== */ 
  p130 = ISA_Pack_Type_Create("p130"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p130, 
	TOP_GP32_SGR_GT_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_AR_P_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p131: ===== */ 
  p131 = ISA_Pack_Type_Create("p131"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Instruction_Pack_Group(p131, 
	TOP_GP32_SETILE2_S16, 	 0x10000000UL, 
	TOP_GP32_SETLE2_S16, 	 0x10000000UL, 
	TOP_GP32_SETLS2_S16, 	 0x10000000UL, 
	TOP_GP32_SETULS2_S16, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p132: ===== */ 
  p132 = ISA_Pack_Type_Create("p132"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p132, 
	TOP_GP32_SFR_GT_MD_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_MD_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_MD_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_MD_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p133: ===== */ 
  p133 = ISA_Pack_Type_Create("p133"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p133, 
	TOP_GP32_SGR_GT_MD_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_MD_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_MD_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_MD_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p134: ===== */ 
  p134 = ISA_Pack_Type_Create("p134"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p134, 
	TOP_GP16_MAKE_G0T_DRL_S7, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p135: ===== */ 
  p135 = ISA_Pack_Type_Create("p135"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p135, 
	TOP_GP32_LCW_GT_CRL_P13_P_U15, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p136: ===== */ 
  p136 = ISA_Pack_Type_Create("p136"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p136, 
	TOP_GP32_CLAMPW_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EXTB_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EXTH_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EXTUB_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EXTUH_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EXTUW_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EXTW_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LOCW_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LZCW_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MOVEP_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MOVE_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEGCP_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEGCW_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEGP_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEGUP_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEGU_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEG_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NOT_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_PRIORE_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_PRIORW_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_RND2CCW_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_RND2C_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_RNDCVCW_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_RNDCV_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHLU32_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHLUM_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHR32_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHRU32_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHRUWM_GT_DR_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p137: ===== */ 
  p137 = ISA_Pack_Type_Create("p137"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p137, 
	TOP_GP32_SAH_GT_AR_BM_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_AR_BP_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_AR_QM_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_AR_QP_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_BM_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_BP_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_QM_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_QP_AR_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p138: ===== */ 
  p138 = ISA_Pack_Type_Create("p138"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p138, 
	TOP_GP32_LGR_GT_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p139: ===== */ 
  p139 = ISA_Pack_Type_Create("p139"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p139, 
	TOP_GP32_LCW_GT_MD_CRL_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRL_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRL_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRL_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p140: ===== */ 
  p140 = ISA_Pack_Type_Create("p140"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (2, 0, 11, 5); 
  Operand (3, 0, 16, 5); 
  Instruction_Pack_Group(p140, 
	TOP_GP16_SDB_G0T_ARH_P_P3_DRL, 	 0x10000000UL, 
	TOP_GP16_SDH_G0T_ARH_P_P3_DRL, 	 0x10000000UL, 
	TOP_GP16_SDW_G0T_ARH_P_P3_DRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p141: ===== */ 
  p141 = ISA_Pack_Type_Create("p141"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p141, 
	TOP_GP32_MAKEF_GT_DR_S16, 	 0x10000000UL, 
	TOP_GP32_MAKEP_GT_DR_S16, 	 0x10000000UL, 
	TOP_GP32_MAKE_GT_DR_S16, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p142: ===== */ 
  p142 = ISA_Pack_Type_Create("p142"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p142, 
	TOP_GP32_SAH_GT_AR_M_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_AR_P_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_M_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_P_AR_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p143: ===== */ 
  p143 = ISA_Pack_Type_Create("p143"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p143, 
	TOP_GP32_LDBP_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p144: ===== */ 
  p144 = ISA_Pack_Type_Create("p144"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p144, 
	TOP_GP32_LGR_GT_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p145: ===== */ 
  p145 = ISA_Pack_Type_Create("p145"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p145, 
	TOP_GP32_SDBP_GT_AR_M_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_AR_P_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_M_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_P_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_M_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_P_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_M_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_P_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_M_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_P_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_M_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_P_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_M_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_P_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_M_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_P_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_M_U9_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_P_U9_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p146: ===== */ 
  p146 = ISA_Pack_Type_Create("p146"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Instruction_Pack_Group(p146, 
	TOP_GP16_GOTO_S11, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p147: ===== */ 
  p147 = ISA_Pack_Type_Create("p147"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p147, 
	TOP_GP32_ADDCP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_ADDCW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_ADDP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_ADDUP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_ADDU_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_ADD_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_ANDNP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_ANDN_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_ANDP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_AND_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_BCLRP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_BCLR_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_BNOTP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_BNOT_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_BSETP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_BSET_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EDGESP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EDGES_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MOVEHH_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MOVEHL_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MOVELH_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MOVELL_GT_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFCHH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFCHL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFCLH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFCLL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFHH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFHL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFLH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFLL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFRCHH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFRCHL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFRCLH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFRCLL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFRHH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFRHL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFRLH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPFRLL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPSSHH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPSSHL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPSSLH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPSSLL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPSUHH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPSUHL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPSULH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPSULL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPUSHH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPUSHL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPUSLH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPUSLL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPUUHH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPUUHL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPUULH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MPUULL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NANDP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NAND_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NORP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NOR_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_ORNP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_ORN_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_ORP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_OR_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHLCW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHLUN_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHLU_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHL_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHRUWN_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHRUW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHRU_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHRWN_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHRW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SHR_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SUBCP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SUBCW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SUBP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SUBUP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SUBU_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_SUB_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_XNORP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_XNOR_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_XORP_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_XOR_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_DIVE_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_DIVUE_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_DIVUW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_DIVW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MAXE_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MAXH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MAXUE_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MAXUH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MAXUW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MAXW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MINE_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MINH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MINUE_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MINUH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MINUW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MINW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MULE_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MULH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MULUE_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MULUH_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MULUW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_IFR_MULW_GT_DR_DR_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p148: ===== */ 
  p148 = ISA_Pack_Type_Create("p148"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p148, 
	TOP_GP32_LCG_GT_BR_P13_P_U15, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p149: ===== */ 
  p149 = ISA_Pack_Type_Create("p149"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p149, 
	TOP_GP32_LDEW_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p150: ===== */ 
  p150 = ISA_Pack_Type_Create("p150"); 
  Operand (0, 0, 0, 5); 
  Operand (1, 0, 0, 5); 
  Instruction_Pack_Group(p150, 
	TOP_GP32_SWNMI, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p151: ===== */ 
  p151 = ISA_Pack_Type_Create("p151"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p151, 
	TOP_GP32_LDBP_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_MD_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_MD_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_MD_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_MD_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p152: ===== */ 
  p152 = ISA_Pack_Type_Create("p152"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p152, 
	TOP_GP16_MOVE_G0T_DRL_DRH, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p153: ===== */ 
  p153 = ISA_Pack_Type_Create("p153"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p153, 
	TOP_GP32_LDBP_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p154: ===== */ 
  p154 = ISA_Pack_Type_Create("p154"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Operand (1, 0, 6, 5); 
  Instruction_Pack_Group(p154, 
	TOP_GP16_MOREPR_U10, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p155: ===== */ 
  p155 = ISA_Pack_Type_Create("p155"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p155, 
	TOP_GP16_EXTB_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_EXTH_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_EXTUB_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_EXTUH_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_EXTUW_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_EXTW_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_MOVE_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_NEGU_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_NOT_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_SHLU32_G0T_DRL, 	 0x10000000UL, 
	TOP_GP16_SHR16_G0T_DRL, 	 0x10000000UL, 
	TOP_GP16_SHR32_G0T_DRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p156: ===== */ 
  p156 = ISA_Pack_Type_Create("p156"); 
  Operand (0, 0, 0, 5); 
  Instruction_Pack_Group(p156, 
	TOP_GP16_POPRTS_U5, 	 0x10000000UL, 
	TOP_GP16_POP_U5, 	 0x10000000UL, 
	TOP_GP16_PUSH_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p157: ===== */ 
  p157 = ISA_Pack_Type_Create("p157"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p157, 
	TOP_GP32_EQE_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQUE_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQUP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQUW_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQW_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FBPOSP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FBPOS_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEANDN_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEAND_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FENAND_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FENOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEORN_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEXNOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FEXOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPANDN_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPAND_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPNAND_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPNOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPORN_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPXNOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FPXOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWANDN_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWAND_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWNAND_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWNOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWORN_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWXNOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_FWXOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEE_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEUE_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEUP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEUW_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEW_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTE_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTUE_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTUP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTUW_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTW_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEE_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEUE_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEUP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEUW_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEW_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTE_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTUE_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTUP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTUW_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTW_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEE_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEUE_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEUP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEUW_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEW_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TBPOSP_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TBPOS_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEANDN_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEAND_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TENAND_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TENOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEORN_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEXNOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TEXOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPANDN_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPAND_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPNAND_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPNOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPORN_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPXNOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TPXOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWANDN_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWAND_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWNAND_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWNOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWORN_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWXNOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_TWXOR_GT_BR_DR_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p158: ===== */ 
  p158 = ISA_Pack_Type_Create("p158"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Instruction_Pack_Group(p158, 
	TOP_GP16_NOTG_G0, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p159: ===== */ 
  p159 = ISA_Pack_Type_Create("p159"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p159, 
	TOP_GP32_SAH_GT_MD_AR_BM_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_MD_AR_BP_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_MD_AR_QM_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_MD_AR_QP_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_MD_AR_BM_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_MD_AR_BP_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_MD_AR_QM_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_MD_AR_QP_U5_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p160: ===== */ 
  p160 = ISA_Pack_Type_Create("p160"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p160, 
	TOP_GP32_BCLRP_GT_DR_DR_U4, 	 0x10000000UL, 
	TOP_GP32_BNOTP_GT_DR_DR_U4, 	 0x10000000UL, 
	TOP_GP32_BSETP_GT_DR_DR_U4, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p161: ===== */ 
  p161 = ISA_Pack_Type_Create("p161"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p161, 
	TOP_GP32_BCLR_GT_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_BNOT_GT_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_BSET_GT_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_SHLCW_GT_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_SHLU_GT_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_SHL_GT_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_SHRUW_GT_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_SHRU_GT_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_SHRW_GT_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_SHR_GT_DR_DR_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p162: ===== */ 
  p162 = ISA_Pack_Type_Create("p162"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 11, 5); 
  Instruction_Pack_Group(p162, 
	TOP_GP32_SAH_GT_MD_AR_M_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_MD_AR_P_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_MD_AR_M_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_MD_AR_P_U5_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p163: ===== */ 
  p163 = ISA_Pack_Type_Create("p163"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p163, 
	TOP_GP32_ADDCP_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_ADDCW_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_ADDP_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_ADDUP_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_ADDU_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_ADD_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_ANDNP_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_ANDN_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_ANDP_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_AND_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_ORNP_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_ORN_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_ORP_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_OR_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_SUBCP_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_SUBCW_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_SUBP_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_SUBUP_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_SUBU_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_SUB_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_XNORP_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_XNOR_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_XORP_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_GP32_XOR_GT_DR_DR_U8, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p164: ===== */ 
  p164 = ISA_Pack_Type_Create("p164"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (2, 0, 11, 5); 
  Operand (3, 0, 16, 5); 
  Instruction_Pack_Group(p164, 
	TOP_GP16_SAW_G0T_ARL_P_P3_ARL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p165: ===== */ 
  p165 = ISA_Pack_Type_Create("p165"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p165, 
	TOP_GP32_SHLUM_GT_DR_U5, 	 0x10000000UL, 
	TOP_GP32_SHRUWM_GT_DR_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p166: ===== */ 
  p166 = ISA_Pack_Type_Create("p166"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p166, 
	TOP_GP32_LAH_GT_MD_AR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_MD_AR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_MD_AR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_MD_AR_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p167: ===== */ 
  p167 = ISA_Pack_Type_Create("p167"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p167, 
	TOP_GP32_LCW_GT_MD_CRH_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRH_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRH_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRH_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p168: ===== */ 
  p168 = ISA_Pack_Type_Create("p168"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p168, 
	TOP_GP32_SCW_GT_AR_M_U9_CRH, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_P_U9_CRH, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p169: ===== */ 
  p169 = ISA_Pack_Type_Create("p169"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p169, 
	TOP_GP32_FBCLRP_GT_BR_DR_DR_U4, 	 0x10000000UL, 
	TOP_GP32_FBNOTP_GT_BR_DR_DR_U4, 	 0x10000000UL, 
	TOP_GP32_FBSETP_GT_BR_DR_DR_U4, 	 0x10000000UL, 
	TOP_GP32_TBCLRP_GT_BR_DR_DR_U4, 	 0x10000000UL, 
	TOP_GP32_TBNOTP_GT_BR_DR_DR_U4, 	 0x10000000UL, 
	TOP_GP32_TBSETP_GT_BR_DR_DR_U4, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p170: ===== */ 
  p170 = ISA_Pack_Type_Create("p170"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p170, 
	TOP_GP32_EQEINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQPINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQUEINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQUPINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQUWINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_EQWINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEEINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEPINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEUEINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEUPINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEUWINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GEWINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTEINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTPINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTUEINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTUPINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTUWINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_GTWINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEEINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEPINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEUEINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEUPINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEUWINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LEWINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTEINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTPINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTUEINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTUPINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTUWINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_LTWINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEEINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEPINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEUEINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEUPINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEUWINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_NEWINS_GT_BR_DR_DR_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p171: ===== */ 
  p171 = ISA_Pack_Type_Create("p171"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p171, 
	TOP_GP32_FBCLR_GT_BR_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_FBNOT_GT_BR_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_FBSET_GT_BR_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_TBCLR_GT_BR_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_TBNOT_GT_BR_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_TBSET_GT_BR_DR_DR_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p172: ===== */ 
  p172 = ISA_Pack_Type_Create("p172"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p172, 
	TOP_GP32_SCW_GT_AR_M_U9_CRL, 	 0x10000000UL, 
	TOP_GP32_SCW_GT_AR_P_U9_CRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p173: ===== */ 
  p173 = ISA_Pack_Type_Create("p173"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p173, 
	TOP_GP32_MAKEB_GT_DR_S32, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p174: ===== */ 
  p174 = ISA_Pack_Type_Create("p174"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p174, 
	TOP_GP16_ADDBA_G0T_ARL_P15_U7, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p175: ===== */ 
  p175 = ISA_Pack_Type_Create("p175"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p175, 
	TOP_GP32_LAH_GT_AR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_AR_AR_P_U9, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_P_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p176: ===== */ 
  p176 = ISA_Pack_Type_Create("p176"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Instruction_Pack_Group(p176, 
	TOP_GP32_GOTOPR_GF_U16, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p177: ===== */ 
  p177 = ISA_Pack_Type_Create("p177"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Instruction_Pack_Group(p177, 
	TOP_GP32_SETILE1_S16, 	 0x10000000UL, 
	TOP_GP32_SETLE1_S16, 	 0x10000000UL, 
	TOP_GP32_SETLS1_S16, 	 0x10000000UL, 
	TOP_GP32_SETULS1_S16, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p178: ===== */ 
  p178 = ISA_Pack_Type_Create("p178"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p178, 
	TOP_GP32_LAH_GT_AR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_AR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_AR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_AR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_AR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p179: ===== */ 
  p179 = ISA_Pack_Type_Create("p179"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p179, 
	TOP_GP32_LCW_GT_CRL_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRL_AR_P_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p180: ===== */ 
  p180 = ISA_Pack_Type_Create("p180"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p180, 
	TOP_GP32_SDBP_GT_P13_P_U15_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_P13_P_U15_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_P13_P_U15_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_P13_P_U15_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_P13_P_U15_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_P13_P_U15_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_P13_P_U15_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_P13_P_U15_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_P13_P_U15_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p181: ===== */ 
  p181 = ISA_Pack_Type_Create("p181"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 7, 5); 
  Instruction_Pack_Group(p181, 
	TOP_GP32_ADDBA_GT_MD_AR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_ADDHA_GT_MD_AR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_ADDWA_GT_MD_AR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SUBBA_GT_MD_AR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SUBHA_GT_MD_AR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SUBWA_GT_MD_AR_AR_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p182: ===== */ 
  p182 = ISA_Pack_Type_Create("p182"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p182, 
	TOP_GP32_LFR_GT_MD_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_MD_AR_P_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p183: ===== */ 
  p183 = ISA_Pack_Type_Create("p183"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p183, 
	TOP_GP32_LCG_GT_BR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_BR_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p184: ===== */ 
  p184 = ISA_Pack_Type_Create("p184"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p184, 
	TOP_GP32_LDEW_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_P13_P_U15, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p185: ===== */ 
  p185 = ISA_Pack_Type_Create("p185"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p185, 
	TOP_GP32_MAKEK_GT_DR_S40, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p186: ===== */ 
  p186 = ISA_Pack_Type_Create("p186"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 11, 5); 
  Instruction_Pack_Group(p186, 
	TOP_GP32_SAH_GT_MD_AR_M_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_MD_AR_P_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_MD_AR_M_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_MD_AR_P_AR_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p187: ===== */ 
  p187 = ISA_Pack_Type_Create("p187"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p187, 
	TOP_GP16_LAW_G0T_ARL_ARH_P_P3, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p188: ===== */ 
  p188 = ISA_Pack_Type_Create("p188"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p188, 
	TOP_GP32_LCW_GT_CRL_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRL_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRL_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRL_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p189: ===== */ 
  p189 = ISA_Pack_Type_Create("p189"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p189, 
	TOP_GP16_LAW_G0T_ARL_ARL_P_P3, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p190: ===== */ 
  p190 = ISA_Pack_Type_Create("p190"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 7, 5); 
  Instruction_Pack_Group(p190, 
	TOP_GP32_XSHLW_GT_DR_DR_DR_U5, 	 0x10000000UL, 
	TOP_GP32_XSHRW_GT_DR_DR_DR_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p191: ===== */ 
  p191 = ISA_Pack_Type_Create("p191"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Instruction_Pack_Group(p191, 
	TOP_GP32_CALL_GT_S21, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p192: ===== */ 
  p192 = ISA_Pack_Type_Create("p192"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Instruction_Pack_Group(p192, 
	TOP_GP16_LAW_G0T_ARL_MQ_P15, 	 0x10000000UL, 
	TOP_GP16_LAW_G0T_ARL_P15_QP, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p193: ===== */ 
  p193 = ISA_Pack_Type_Create("p193"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 7, 5); 
  Instruction_Pack_Group(p193, 
	TOP_GP32_MAFCHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFCHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFCLH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFCLL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFLH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFLL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFRCHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFRCHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFRCLH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFRCLL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFRHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFRHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFRLH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAFRLL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MASK_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MASSHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MASSHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MASSLH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MASSLL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MASUHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MASUHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MASULH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MASULL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAUSHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAUSHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAUSLH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAUSLL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAUUHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAUUHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAUULH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MAUULL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFCHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFCHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFCLH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFCLL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFLH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFLL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFRCHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFRCHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFRCLH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFRCLL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFRHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFRHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFRLH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSFRLL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSSSHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSSSHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSSSLH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSSSLL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSSUHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSSUHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSSULH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSSULL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSUSHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSUSHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSUSLH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSUSLL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSUUHH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSUUHL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSUULH_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_MSUULL_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_XSHLW_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_GP32_XSHRW_GT_DR_DR_DR_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p194: ===== */ 
  p194 = ISA_Pack_Type_Create("p194"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p194, 
	TOP_GP32_MAKEBA_GT_AR_U32, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p195: ===== */ 
  p195 = ISA_Pack_Type_Create("p195"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p195, 
	TOP_GP32_LGR_GT_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p196: ===== */ 
  p196 = ISA_Pack_Type_Create("p196"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p196, 
	TOP_GP16_SDB_G0T_ARL_P_U4_DRL, 	 0x10000000UL, 
	TOP_GP16_SDH_G0T_ARL_P_U4_DRL, 	 0x10000000UL, 
	TOP_GP16_SDW_G0T_ARL_P_U4_DRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p197: ===== */ 
  p197 = ISA_Pack_Type_Create("p197"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p197, 
	TOP_GP32_LCW_GT_CRH_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRH_AR_P_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p198: ===== */ 
  p198 = ISA_Pack_Type_Create("p198"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p198, 
	TOP_GP16_MOVEA_G0T_ARL_ARH, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p199: ===== */ 
  p199 = ISA_Pack_Type_Create("p199"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p199, 
	TOP_GP32_SAH_GT_MD_AR_BM_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_MD_AR_BP_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_MD_AR_QM_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_MD_AR_QP_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_MD_AR_BM_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_MD_AR_BP_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_MD_AR_QM_AR_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_MD_AR_QP_AR_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p200: ===== */ 
  p200 = ISA_Pack_Type_Create("p200"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p200, 
	TOP_GP16_MOVEA_G0T_ARL_ARL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p201: ===== */ 
  p201 = ISA_Pack_Type_Create("p201"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p201, 
	TOP_GP32_MOVEG_GT_BR_BR, 	 0x10000000UL, 
	TOP_GP32_NOTG_GT_BR, 	 0x10000000UL, 
	TOP_GP32_NOTG_GT_BR_BR, 	 0x10000000UL, 
	TOP_GP32_NOTPG_GT_BR_BR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p202: ===== */ 
  p202 = ISA_Pack_Type_Create("p202"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p202, 
	TOP_GP32_SCW_GT_P13_P_U15_CRH, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p203: ===== */ 
  p203 = ISA_Pack_Type_Create("p203"); 
  Operand (0, 0, 0, 5); 
  Operand (1, 0, 0, 5); 
  Operand (2, 0, 0, 5); 
  Instruction_Pack_Group(p203, 
	TOP_GP32_SWI_U12, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p204: ===== */ 
  p204 = ISA_Pack_Type_Create("p204"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Instruction_Pack_Group(p204, 
	TOP_GP32_FCLFSCL_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLFSNR_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLFSVE_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLFSVH_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLFSVL_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLFSVP_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLFSVW_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLRSCL_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLRSNR_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLRSVE_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLRSVH_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLRSVL_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLRSVP_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FCLRSVW_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FSCL_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FSNR_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FSVE_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FSVH_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FSVL_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FSVP_GT_BR, 	 0x10000000UL, 
	TOP_GP32_FSVW_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLFSCL_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLFSNR_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLFSVE_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLFSVH_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLFSVL_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLFSVP_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLFSVW_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLRSCL_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLRSNR_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLRSVE_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLRSVH_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLRSVL_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLRSVP_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TCLRSVW_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TSCL_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TSNR_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TSVE_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TSVH_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TSVL_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TSVP_GT_BR, 	 0x10000000UL, 
	TOP_GP32_TSVW_GT_BR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p205: ===== */ 
  p205 = ISA_Pack_Type_Create("p205"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p205, 
	TOP_GP16_LAW_G0T_ARL_P13_PR_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p206: ===== */ 
  p206 = ISA_Pack_Type_Create("p206"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p206, 
	TOP_GP32_SCW_GT_P13_P_U15_CRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p207: ===== */ 
  p207 = ISA_Pack_Type_Create("p207"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 12, 5); 
  Operand (4, 0, 17, 5); 
  Instruction_Pack_Group(p207, 
	TOP_GP32_LCW_GT_MD_CRH_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRH_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRH_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRH_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p208: ===== */ 
  p208 = ISA_Pack_Type_Create("p208"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p208, 
	TOP_GP32_LDH_GT_DR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_DR_AR_P_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p209: ===== */ 
  p209 = ISA_Pack_Type_Create("p209"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p209, 
	TOP_GP32_ANDG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_ANDNG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_ANDNPG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_ANDPG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_NANDG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_NANDPG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_NORG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_NORPG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_ORG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_ORNG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_ORNPG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_ORPG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_XNORG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_XNORPG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_XORG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_GP32_XORPG_GT_BR_BR_BR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p210: ===== */ 
  p210 = ISA_Pack_Type_Create("p210"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p210, 
	TOP_GP32_SAH_GT_AR_BM_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_AR_BP_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_AR_MQ_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_AR_QM_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAH_GT_AR_QP_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_BM_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_BP_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_MQ_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_QM_U5_AR, 	 0x10000000UL, 
	TOP_GP32_SAW_GT_AR_QP_U5_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p211: ===== */ 
  p211 = ISA_Pack_Type_Create("p211"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p211, 
	TOP_GP16_SAW_G0T_P15_P_U6_ARL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p212: ===== */ 
  p212 = ISA_Pack_Type_Create("p212"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p212, 
	TOP_GP16_SAW_G0T_P13_P_U8_ARL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p213: ===== */ 
  p213 = ISA_Pack_Type_Create("p213"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p213, 
	TOP_GP32_LCG_GT_BR_AR_M_U9, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_BR_AR_P_U9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p214: ===== */ 
  p214 = ISA_Pack_Type_Create("p214"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p214, 
	TOP_GP16_ADDBA_G0T_ARL_ARL_U4, 	 0x10000000UL, 
	TOP_GP16_SUBBA_G0T_ARL_ARL_U4, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p215: ===== */ 
  p215 = ISA_Pack_Type_Create("p215"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 11, 5); 
  Instruction_Pack_Group(p215, 
	TOP_GP32_SFR_GT_MD_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_MD_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p216: ===== */ 
  p216 = ISA_Pack_Type_Create("p216"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 11, 5); 
  Instruction_Pack_Group(p216, 
	TOP_GP32_SGR_GT_MD_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_MD_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p217: ===== */ 
  p217 = ISA_Pack_Type_Create("p217"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p217, 
	TOP_GP16_DECWA_G0T_P15_U8, 	 0x10000000UL, 
	TOP_GP16_INCWA_G0T_P15_U8, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p218: ===== */ 
  p218 = ISA_Pack_Type_Create("p218"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p218, 
	TOP_GP16_MORESR_G0T_U10, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p219: ===== */ 
  p219 = ISA_Pack_Type_Create("p219"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Instruction_Pack_Group(p219, 
	TOP_GP32_FMOVEA_GT_BR_AR_AR, 	 0x10000000UL, 
	TOP_GP32_TMOVEA_GT_BR_AR_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p220: ===== */ 
  p220 = ISA_Pack_Type_Create("p220"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 11, 5); 
  Instruction_Pack_Group(p220, 
	TOP_GP32_SFR_GT_MD_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_MD_AR_P_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p221: ===== */ 
  p221 = ISA_Pack_Type_Create("p221"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 11, 5); 
  Instruction_Pack_Group(p221, 
	TOP_GP32_SGR_GT_MD_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_MD_AR_P_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p222: ===== */ 
  p222 = ISA_Pack_Type_Create("p222"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p222, 
	TOP_GP32_LAH_GT_MD_AR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_MD_AR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_MD_AR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_MD_AR_AR_P_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p223: ===== */ 
  p223 = ISA_Pack_Type_Create("p223"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 7, 5); 
  Operand (4, 0, 12, 5); 
  Instruction_Pack_Group(p223, 
	TOP_GP32_LDEW_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_MD_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_MD_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p224: ===== */ 
  p224 = ISA_Pack_Type_Create("p224"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p224, 
	TOP_GP32_COPYA_GT_AR_DR, 	 0x10000000UL, 
	TOP_GP32_COPYSA_GT_AR_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p225: ===== */ 
  p225 = ISA_Pack_Type_Create("p225"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p225, 
	TOP_GP32_LDEW_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDEW_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDHH_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LDLH_GT_DR_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p226: ===== */ 
  p226 = ISA_Pack_Type_Create("p226"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p226, 
	TOP_GP32_LFR_GT_MD_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_MD_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p227: ===== */ 
  p227 = ISA_Pack_Type_Create("p227"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p227, 
	TOP_GP32_LCW_GT_CRH_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRH_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRH_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRH_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p228: ===== */ 
  p228 = ISA_Pack_Type_Create("p228"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Instruction_Pack_Group(p228, 
	TOP_GP32_SETILE0_S16, 	 0x10000000UL, 
	TOP_GP32_SETLE0_S16, 	 0x10000000UL, 
	TOP_GP32_SETLS0_S16, 	 0x10000000UL, 
	TOP_GP32_SETULS0_S16, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p229: ===== */ 
  p229 = ISA_Pack_Type_Create("p229"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p229, 
	TOP_GP16_ADDU_G0T_DRL_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_AND_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_BCLR_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_BNOT_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_BSET_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_MPSSLL_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_MPSUHL_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_MPUUHL_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_MPUULL_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_OR_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_ROTLW_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_ROTRW_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_SHLU_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_SHRUW_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_SHRW_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_SUBU_G0T_DRL_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_XOR_G0T_DRL_DRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p230: ===== */ 
  p230 = ISA_Pack_Type_Create("p230"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Operand (1, 0, 6, 5); 
  Instruction_Pack_Group(p230, 
	TOP_GP16_EQA_G0_ARL_ARL, 	 0x10000000UL, 
	TOP_GP16_GEA_G0_ARL_ARL, 	 0x10000000UL, 
	TOP_GP16_GTA_G0_ARL_ARL, 	 0x10000000UL, 
	TOP_GP16_NEA_G0_ARL_ARL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p231: ===== */ 
  p231 = ISA_Pack_Type_Create("p231"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p231, 
	TOP_GP32_SFR_GT_P13_P_U15, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p232: ===== */ 
  p232 = ISA_Pack_Type_Create("p232"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (2, 0, 11, 5); 
  Operand (3, 0, 16, 5); 
  Instruction_Pack_Group(p232, 
	TOP_GP16_SAW_G0T_ARH_P_P3_ARL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p233: ===== */ 
  p233 = ISA_Pack_Type_Create("p233"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p233, 
	TOP_GP32_SGR_GT_P13_P_U15, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p234: ===== */ 
  p234 = ISA_Pack_Type_Create("p234"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p234, 
	TOP_GP32_LAH_GT_AR_P13_P_U15, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_AR_P13_P_U15, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p235: ===== */ 
  p235 = ISA_Pack_Type_Create("p235"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p235, 
	TOP_GP16_DECBA_G0T_ARL_ARL, 	 0x10000000UL, 
	TOP_GP16_INCBA_G0T_ARL_ARL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p236: ===== */ 
  p236 = ISA_Pack_Type_Create("p236"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p236, 
	TOP_GP32_SFR_GT_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_SFR_GT_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p237: ===== */ 
  p237 = ISA_Pack_Type_Create("p237"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p237, 
	TOP_GP32_SGR_GT_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_SGR_GT_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p238: ===== */ 
  p238 = ISA_Pack_Type_Create("p238"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p238, 
	TOP_GP32_CLRSCL_GT, 	 0x10000000UL, 
	TOP_GP32_CLRSNR_GT, 	 0x10000000UL, 
	TOP_GP32_CLRSVE_GT, 	 0x10000000UL, 
	TOP_GP32_CLRSVH_GT, 	 0x10000000UL, 
	TOP_GP32_CLRSVL_GT, 	 0x10000000UL, 
	TOP_GP32_CLRSVP_GT, 	 0x10000000UL, 
	TOP_GP32_CLRSVW_GT, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p239: ===== */ 
  p239 = ISA_Pack_Type_Create("p239"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p239, 
	TOP_GP16_LDB_G0T_DRL_ARH_P_P3, 	 0x10000000UL, 
	TOP_GP16_LDH_G0T_DRL_ARH_P_P3, 	 0x10000000UL, 
	TOP_GP16_LDUB_G0T_DRL_ARH_P_P3, 	 0x10000000UL, 
	TOP_GP16_LDUH_G0T_DRL_ARH_P_P3, 	 0x10000000UL, 
	TOP_GP16_LDUW_G0T_DRL_ARH_P_P3, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p240: ===== */ 
  p240 = ISA_Pack_Type_Create("p240"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p240, 
	TOP_GP32_LDW_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p241: ===== */ 
  p241 = ISA_Pack_Type_Create("p241"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p241, 
	TOP_GP16_LDB_G0T_DRL_ARL_P_P3, 	 0x10000000UL, 
	TOP_GP16_LDH_G0T_DRL_ARL_P_P3, 	 0x10000000UL, 
	TOP_GP16_LDUB_G0T_DRL_ARL_P_P3, 	 0x10000000UL, 
	TOP_GP16_LDUH_G0T_DRL_ARL_P_P3, 	 0x10000000UL, 
	TOP_GP16_LDUW_G0T_DRL_ARL_P_P3, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p242: ===== */ 
  p242 = ISA_Pack_Type_Create("p242"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p242, 
	TOP_GP32_LCW_GT_MD_CRL_AR_M_AR, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRL_AR_P_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p243: ===== */ 
  p243 = ISA_Pack_Type_Create("p243"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p243, 
	TOP_GP32_LFR_GT_MD_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_MD_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_MD_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LFR_GT_MD_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p244: ===== */ 
  p244 = ISA_Pack_Type_Create("p244"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p244, 
	TOP_GP16_LDB_G0T_DRL_ARL_P_U4, 	 0x10000000UL, 
	TOP_GP16_LDH_G0T_DRL_ARL_P_U4, 	 0x10000000UL, 
	TOP_GP16_LDUB_G0T_DRL_ARL_P_U4, 	 0x10000000UL, 
	TOP_GP16_LDUH_G0T_DRL_ARL_P_U4, 	 0x10000000UL, 
	TOP_GP16_LDUW_G0T_DRL_ARL_P_U4, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p245: ===== */ 
  p245 = ISA_Pack_Type_Create("p245"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p245, 
	TOP_GP16_BRANCH_G0F, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p246: ===== */ 
  p246 = ISA_Pack_Type_Create("p246"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p246, 
	TOP_GP32_LAH_GT_MD_AR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_MD_AR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_MD_AR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_MD_AR_AR_QP_U5, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_MD_AR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_MD_AR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_MD_AR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_MD_AR_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p247: ===== */ 
  p247 = ISA_Pack_Type_Create("p247"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Instruction_Pack_Group(p247, 
	TOP_GP32_ANDNP_GT_DR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_ANDN_GT_DR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_ORNP_GT_DR_U8_DR, 	 0x10000000UL, 
	TOP_GP32_ORN_GT_DR_U8_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p248: ===== */ 
  p248 = ISA_Pack_Type_Create("p248"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p248, 
	TOP_GP16_COPYD_G0T_DRL_ARL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p249: ===== */ 
  p249 = ISA_Pack_Type_Create("p249"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 1, 5); 
  Operand (3, 0, 6, 5); 
  Operand (4, 0, 6, 5); 
  Instruction_Pack_Group(p249, 
	TOP_GP16_SAW_G0T_P13_PR_U5_ARL, 	 0x10000000UL, 
	TOP_GP16_SDB_G0T_P13_PR_U5_DRL, 	 0x10000000UL, 
	TOP_GP16_SDH_G0T_P13_PR_U5_DRL, 	 0x10000000UL, 
	TOP_GP16_SDW_G0T_P13_PR_U5_DRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p250: ===== */ 
  p250 = ISA_Pack_Type_Create("p250"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p250, 
	TOP_GP32_SDBP_GT_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_BM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_BP_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_QM_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_QP_AR_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p251: ===== */ 
  p251 = ISA_Pack_Type_Create("p251"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p251, 
	TOP_GP16_CALL_G0T_S9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p252: ===== */ 
  p252 = ISA_Pack_Type_Create("p252"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p252, 
	TOP_GP32_LCW_GT_CRL_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRL_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRL_AR_MQ_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRL_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_CRL_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p253: ===== */ 
  p253 = ISA_Pack_Type_Create("p253"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Operand (1, 0, 6, 5); 
  Instruction_Pack_Group(p253, 
	TOP_GP16_EQW_G0_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_FBPOS_G0_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_FWAND_G0_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_FWOR_G0_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_GEUW_G0_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_GEW_G0_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_GTUW_G0_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_GTW_G0_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_NEW_G0_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_TBPOS_G0_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_TWAND_G0_DRL_DRL, 	 0x10000000UL, 
	TOP_GP16_TWOR_G0_DRL_DRL, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p254: ===== */ 
  p254 = ISA_Pack_Type_Create("p254"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p254, 
	TOP_GP16_LDB_G0T_DRL_P13_PR_U5, 	 0x10000000UL, 
	TOP_GP16_LDH_G0T_DRL_P13_PR_U5, 	 0x10000000UL, 
	TOP_GP16_LDUB_G0T_DRL_P13_PR_U5, 	 0x10000000UL, 
	TOP_GP16_LDUH_G0T_DRL_P13_PR_U5, 	 0x10000000UL, 
	TOP_GP16_LDUW_G0T_DRL_P13_PR_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p255: ===== */ 
  p255 = ISA_Pack_Type_Create("p255"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Operand (2, 0, 6, 5); 
  Operand (3, 0, 11, 5); 
  Instruction_Pack_Group(p255, 
	TOP_GP32_SDBP_GT_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBP_GT_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDBSW_GT_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDB_GT_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDEW_GT_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDF_GT_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDHSW_GT_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDH_GT_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDP_GT_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_M_AR_DR, 	 0x10000000UL, 
	TOP_GP32_SDW_GT_AR_P_AR_DR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p256: ===== */ 
  p256 = ISA_Pack_Type_Create("p256"); 
  Operand (0, 0, 0, 5); 
  Instruction_Pack_Group(p256, 
	TOP_GP32_CALL_S25, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p257: ===== */ 
  p257 = ISA_Pack_Type_Create("p257"); 
  Operand (0, 0, 0, 1); 
  Operand (1, 0, 1, 5); 
  Instruction_Pack_Group(p257, 
	TOP_GP32_BRANCH_GF, 	 0x10000000UL, 
	TOP_GP32_JUMP_GF, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p258: ===== */ 
  p258 = ISA_Pack_Type_Create("p258"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p258, 
	TOP_GP16_LAW_G0T_ARL_P15_P_U6, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p259: ===== */ 
  p259 = ISA_Pack_Type_Create("p259"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p259, 
	TOP_GP16_LAW_G0T_ARL_P13_P_U8, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p260: ===== */ 
  p260 = ISA_Pack_Type_Create("p260"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Operand (1, 0, 6, 5); 
  Instruction_Pack_Group(p260, 
	TOP_GP16_EQW_G0_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_GEUW_G0_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_GEW_G0_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_GTUW_G0_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_GTW_G0_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_LEUW_G0_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_LEW_G0_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_LTUW_G0_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_LTW_G0_DRL_U5, 	 0x10000000UL, 
	TOP_GP16_NEW_G0_DRL_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p261: ===== */ 
  p261 = ISA_Pack_Type_Create("p261"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p261, 
	TOP_GP32_LCW_GT_MD_CRL_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LCW_GT_MD_CRL_AR_P_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p262: ===== */ 
  p262 = ISA_Pack_Type_Create("p262"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p262, 
	TOP_GP32_GETP15U_GT_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p263: ===== */ 
  p263 = ISA_Pack_Type_Create("p263"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p263, 
	TOP_GP32_LGR_GT_MD_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_MD_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_MD_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LGR_GT_MD_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p264: ===== */ 
  p264 = ISA_Pack_Type_Create("p264"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p264, 
	TOP_GP32_LCG_GT_MD_BR_AR_BM_U5, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_MD_BR_AR_BP_U5, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_MD_BR_AR_QM_U5, 	 0x10000000UL, 
	TOP_GP32_LCG_GT_MD_BR_AR_QP_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p265: ===== */ 
  p265 = ISA_Pack_Type_Create("p265"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 12, 5); 
  Instruction_Pack_Group(p265, 
	TOP_GP16_LAW_G0T_ARL_ARL_P_U4, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p266: ===== */ 
  p266 = ISA_Pack_Type_Create("p266"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 17, 5); 
  Instruction_Pack_Group(p266, 
	TOP_GP32_LDBP_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_DR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_DR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_DR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LDW_GT_DR_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p267: ===== */ 
  p267 = ISA_Pack_Type_Create("p267"); 
  Operand (0, 0, 0, 5); 
  Instruction_Pack_Group(p267, 
	TOP_GP32_POPRTE_U20, 	 0x10000000UL, 
	TOP_GP32_POPRTS_U20, 	 0x10000000UL, 
	TOP_GP32_POP_U20, 	 0x10000000UL, 
	TOP_GP32_PUSH_U20, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p268: ===== */ 
  p268 = ISA_Pack_Type_Create("p268"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p268, 
	TOP_GP32_FA_GT_BR_AR, 	 0x10000000UL, 
	TOP_GP32_TA_GT_BR_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p269: ===== */ 
  p269 = ISA_Pack_Type_Create("p269"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Operand (2, 0, 7, 5); 
  Operand (3, 0, 12, 5); 
  Instruction_Pack_Group(p269, 
	TOP_GP32_LDBP_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDBP_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDBSW_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDB_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDF_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDHSW_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDH_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDP_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDSETUB_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDUBP_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDUB_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDUH_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_MD_DR_AR_M_U5, 	 0x10000000UL, 
	TOP_GP32_LDUW_GT_MD_DR_AR_P_U5, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p270: ===== */ 
  p270 = ISA_Pack_Type_Create("p270"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 1); 
  Operand (1, 0, 7, 5); 
  Instruction_Pack_Group(p270, 
	TOP_GP16_GOTO_G0F_S9, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p271: ===== */ 
  p271 = ISA_Pack_Type_Create("p271"); 
  Result(0, 0, 5); 
  Result(1, 6, 5); 
  Operand (0, 0, 11, 1); 
  Operand (1, 0, 12, 5); 
  Operand (2, 0, 12, 5); 
  Operand (3, 0, 17, 5); 
  Instruction_Pack_Group(p271, 
	TOP_GP32_LAH_GT_MD_AR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_MD_AR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_MD_AR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LAH_GT_MD_AR_AR_QP_AR, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_MD_AR_AR_BM_AR, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_MD_AR_AR_BP_AR, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_MD_AR_AR_QM_AR, 	 0x10000000UL, 
	TOP_GP32_LAW_GT_MD_AR_AR_QP_AR, 	 0x10000000UL, 
	TOP_UNDEFINED); 

/* =====  p272: ===== */ 
  p272 = ISA_Pack_Type_Create("p272"); 
  Result(0, 0, 5); 
  Operand (0, 0, 6, 5); 
  Operand (1, 0, 6, 5); 
  Instruction_Pack_Group(p272, 
	TOP_GP16_TRAP_U4, 	 0x10000000UL, 
	TOP_UNDEFINED); 

  ISA_Pack_End(); 
  return 0; 
} 
